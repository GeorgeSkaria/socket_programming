#include <stdio.h>
#include <stdlib.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define WINDOW_SIZE 3
#define PACKETS 10

int main() {
    int ClientSocket = socket(AF_INET, SOCK_STREAM, 0);
    if (ClientSocket == -1) {
        perror("Error creating socket");
        exit(EXIT_FAILURE);
    }

    struct sockaddr_in Client;
    Client.sin_family = AF_INET;
    Client.sin_port = htons(5000);
    Client.sin_addr.s_addr = inet_addr("127.0.0.1");

    if (connect(ClientSocket, (struct sockaddr *)&Client, sizeof(Client)) == -1) {
        perror("Error connecting");
        exit(EXIT_FAILURE);
    }

    int SendFrames = 0, Acknowledge;
    while (SendFrames < PACKETS) {
        int Frames[WINDOW_SIZE] = {-1, -1, -1};
        for (int i = 0; i < WINDOW_SIZE && SendFrames < PACKETS; i++) {
            printf("Frame %d Transmitted\n", SendFrames);
            Frames[i] = SendFrames++;
        }

        if (send(ClientSocket, &Frames, sizeof(Frames), 0) == -1) {
            perror("Error sending");
            exit(EXIT_FAILURE);
        }

        for (int i = 0; i < WINDOW_SIZE; i++) {
            if (recv(ClientSocket, &Acknowledge, sizeof(Acknowledge), 0) == -1) {
                perror("Error receiving acknowledgement");
                exit(EXIT_FAILURE);
            }

            if (Frames[i] == Acknowledge) {
                SendFrames = Acknowledge;
                printf("Resending the window from %d onwards\n", Acknowledge);
                break;
            } else if (Frames[i] != -1) {
                printf("Acknowledge received %d for frame %d\n", Acknowledge, Frames[i]);
            }
        }
    }

    close(ClientSocket);
    return 0;
}
